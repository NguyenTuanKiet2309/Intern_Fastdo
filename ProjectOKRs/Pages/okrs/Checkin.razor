@page "/okr/checkin"
@page "/okr/checkin/{UserId}"
@inject IJSRuntime jsruntime
@inject NavigationManager navigation
<PageTitle>@_title</PageTitle>


<section class="main_content">
  <div class="card flex_column is_fullheight">
    <ul class="columns is-vcentered is-variable is-2 mb-2">
      <li class="column">
        <h1 class="title is-5 has-text-info">
          CHECK-IN OKRs
        </h1>
      </li>
      @if (userInfo != null)
      {
        <li class="column is-one-quarter">
          <MemberSearch sources="usersList" OnUpdate="ChangeFilterUser" />
        </li>
        <li class="column is-narrow">
          <a href="/okr/history/@userInfo.Id">Lịch sử chỉnh sửa</a>
        </li>
      }
      <li class="column is-narrow">
        <a href="/okr/history/241F7AA7FF" previewlistener="true" Lịch sử chỉnh sửa></a>
      </li>
    </ul>
    <div class="inner_section scrolly" style="flex:1">
      <table class="table is-fullwidth is-noborder is-responsive sticky only_desktop" style="width:100%">
        <thead>
          <tr class="is-size-7" style="border-bottom: 1px solid #DEDEDE;">
            <th class="">Mục tiêu</th>
            <th class="" width="160px">Kết Quả Then Chốt</th>
            <th class="" width="200px" align="center">Tiến độ</th>
            <th class="" width="90px" align="center">Thay đổi</th>
            <th class="" width="90px" align="center">Tự tin</th>
            <th class="" width="105px" align="center" title="Check-in gần nhất">Check-in</th>
            <th class="" width="120px" align="center">Trạng thái</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var okr in okrList)
          {
            var showKey = okrsShow.Contains(okr.Id);
            var confident = DBOkrs.Confident(okr.confident);
            var progress = DBOkrs.GetProgress(okr.key_results);
            var okrColor = Shared.ProgressColor(progress);

            <tr>
              <td>
                <div class="is-flex">
                  <a class="has-text-weight-semibold" href="/okr/checkin/@okr.Id/info">
                    @okr.name
                  </a>
                  @if (okr.done)
                  {
                    <span class="ml-1 icon" title="OKRs đã hoàn thành">
                      <i class="material-icons-outlined is-size-6 has-text-success">check_circle</i>
                    </span>
                  }
                </div>
              </td>
              <td>
                <label class="td-label">Kết quả</label>
                <div class="td-value">
                  <a class="icon-text has-text-weight-semibold has-text-info" @onclick="() => ShowKeys(okr.Id)">
                    <span>@okr.key_results.Count kết quả</span>
                    <span class="icon">
                      <i class="material-icons-outlined is-size-5">
                        @(showKey ? "arrow_drop_down" : "arrow_right")
                      </i>
                    </span>
                  </a>
                </div>
              </td>
              <td>
                <label class="td-label">Tiến độ</label>
                <div class="td-value">
                  <div class="progress_has_value">
                    <progress class="progress is-small @okrColor" value="@Convert.ToInt32(progress)" max="100" />
                    <span>@Shared.FormatPercent(progress)%</span>
                  </div>
                </div>
              </td>
              <td align="center">
                <label class="td-label">Thay đổi</label>
                <div class="td-value has-text-weight-semibold">
                  @Shared.FormatPercent(progress - okr.progress_prev)%
                </div>
              </td>
              <td align="center">
                <label class="td-label">Tự tin</label>
                <div class="td-value has-text-weight-semibold">
                  <span class="@confident.color">@confident.name</span>
                </div>
              </td>
              <td align="center">
                <label class="td-label">Check-in</label>
                <div class="td-value">
                  @if (okr.status_checkin > 0)
                  {
                    <span>@string.Format("{0:dd/MM/yyyy}", new DateTime(okr.date_checkin))</span>
                  }
                </div>
              </td>
              <td align="center">
                <label class="td-label">Trạng thái</label>
                <div class="td-value has-text-weight-semibold">
                  @if (okr.done)
                  {
                    <span class="has-text-success">Đã hoàn thành</span>
                  }
                  else
                  {
                    @if (okr.status_checkin == 1)
                    {
                      <span class="has-text-success">Check-in nháp</span>
                    }
                    else if (okr.status_checkin == 2)
                    {
                      <span class="has-text-info">Đã xác nhận</span>
                    }
                    else if (okr.status_checkin == 3)
                    {
                      <span class="has-text-link">Đã check-in</span>
                    }
                  }
                </div>
              </td>
            </tr>
            if (showKey)
            {
              foreach (var kr in okr.key_results)
              {
                var confidentKr = DBOkrs.Confident(kr.confident);
                <tr>
                  <td class="pl-4">
                    @kr.name
                  </td>
                  <td class="pl-2">
                    @if (!string.IsNullOrEmpty(kr.link))
                    {
                      <a class="icon-text has-text-link" href="@kr.link" target="_blank">
                        <span class="icon is-small">
                          <i class="material-icons-outlined">attach_file</i>
                        </span>
                        <span>Kết quả</span>
                      </a>
                    }
                  </td>
                  <td>
                    <label class="td-label">Đạt được</label>
                    <div class="td-value">
                      <span class="has-text-success" title="@string.Format("{0:0,0}/{1:0,0}", kr.result, kr.goal)">
                        @Shared.ConvertCurrency(kr.result)/@Shared.ConvertCurrency(kr.goal)
                      </span>
                      <span class="is-pulled-right">@kr.unit</span>
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">Thay đổi</label>
                    <div class="td-value">
                      @Shared.FormatPercent(Shared.Progress(kr.change, kr.goal))%
                    </div>
                  </td>
                  <td align="center">
                    <label class="td-label">Tự tin</label>
                    <div class="td-value has-text-weight-semibold">
                      <span class="@confidentKr.color">@confidentKr.name</span>
                    </div>
                  </td>
                  <td colspan="2"></td>
                </tr>
              }
            }
          }
        </tbody>
      </table>
    </div>
  </div>
</section>
@code {
  [CascadingParameter]
  public MainLayout Layout { get; set; }
  [Parameter]
  public string UserId { get; set; }


  private List<OKRs> okrList = new();
  private List<Users> usersList = new();
  private List<string> okrsShow = new();
  private Users userInfo = null;
  private string userFullName = string.Empty;

  private string _title = "CFRs - Check-in";

  protected override async Task OnParametersSetAsync()
  {
    if (string.IsNullOrEmpty(UserId))
    {
      userInfo = Layout.User;
      userFullName = userInfo.Username;
    }
    else
    {
      userInfo = await DBUsers.Get(UserId);
      if (userInfo != null)
        userFullName = userInfo.Username;
      else
      {
        userInfo = new();
        userFullName = "Tài khoản không tồn tại";
      }
    }

    await ShowOkrList();
    await showUserList();
  }

  private async Task<bool> showUserList()
  {
    bool _success = true;
    try
    {
      usersList = await DBUsers.GetAllUser();
    }
    catch (Exception ex)
    {

      _success = false;
    }
    return _success;
  }

  private void ShowKeys(string id)
  {
    if (okrsShow.Contains(id))
      okrsShow.Remove(id);
    else
      okrsShow.Add(id);
  }
  private async Task<bool> ShowOkrList()
  {
    bool _success = true;
    try
    {
      okrList = await DBOkrs.GetList(Layout.Cycle, userInfo.Id);
    }
    catch (Exception ex)
    {
      var formatLink = navigation.Uri.Replace(navigation.BaseUri, "/");
      _success = false;
    }
    return _success;
  }


  private void ChangeFilterUser(string value)
  {
    if (string.IsNullOrEmpty(value))
      userFullName = string.Empty;
    else
      navigation.NavigateTo("/okr/checkin/" + value, true);
  }
}
